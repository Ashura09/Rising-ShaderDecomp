sampler Color_1_sampler;
float4 CubeParam;
sampler ShadowCast_Tex_sampler;
sampler Spec_Pow_sampler;
float4 ambient_rate;
float4 ambient_rate_rate;
samplerCUBE cubemap2_sampler;
samplerCUBE cubemap_sampler;
float3 fog;
float4 g_All_Offset;
float g_CubeBlendParam;
float2 g_ShadowFarInvPs;
float g_ShadowUse;
float4 g_TargetUvParam;
float4 g_specCalc1;
float4 g_specCalc2;
float4 light_Color;
float4 lightpos;
float4 point_light1;
float4 point_light2;
float4 point_lightEv0;
float4 point_lightEv1;
float4 point_lightEv2;
float4 point_lightpos1;
float4 point_lightpos2;
float4 point_lightposEv0;
float4 point_lightposEv1;
float4 point_lightposEv2;
float4 prefogcolor_enhance;
float4 specularParam;
sampler specularmap_sampler;
float4 spot_angle;
float4 spot_param;

struct PS_IN
{
	float2 texcoord : TEXCOORD;
	float4 texcoord1 : TEXCOORD1;
	float3 texcoord2 : TEXCOORD2;
	float3 texcoord3 : TEXCOORD3;
	float3 texcoord4 : TEXCOORD4;
	float4 texcoord7 : TEXCOORD7;
};

float4 main(PS_IN i) : COLOR
{
	float4 o;

	float4 r0;
	float4 r1;
	float4 r2;
	float4 r3;
	float4 r4;
	float4 r5;
	float4 r6;
	float4 r7;
	float3 r8;
	r0.x = 1 / i.texcoord7.w;
	r0.xy = r0.xx * i.texcoord7.xy;
	r0.xy = r0.xy * float2(0.5, -0.5) + 0.5;
	r0.xy = r0.xy + g_TargetUvParam.xy;
	r0 = tex2D(ShadowCast_Tex_sampler, r0);
	r0.y = i.texcoord7.z * g_ShadowFarInvPs.y + -g_ShadowFarInvPs.x;
	r0.y = -r0.y + 1;
	r0.x = -r0.x + r0.y;
	r0.x = r0.x + g_ShadowUse.x;
	r0.y = frac(-r0.x);
	r0.x = r0.y + r0.x;
	r0.y = dot(-i.texcoord1.xyz, -i.texcoord1.xyz);
	r0.y = 1 / sqrt(r0.y);
	r1.xyz = -i.texcoord1.xyz * r0.yyy + lightpos.xyz;
	r0.yzw = r0.yyy * -i.texcoord1.xyz;
	r2.xyz = normalize(r1.xyz);
	r1.x = dot(r2.xyz, i.texcoord3.xyz);
	r1.y = -r1.x + 1;
	r1.x = r1.y * -specularParam.z + r1.x;
	r1.yw = specularParam.yy;
	r2 = tex2D(Spec_Pow_sampler, r1);
	r2.xyz = r2.xyz * light_Color.xyz;
	r1.xy = g_All_Offset.xy + i.texcoord.xy;
	r3 = tex2D(specularmap_sampler, r1);
	r4 = tex2D(Color_1_sampler, r1);
	r2.xyz = r2.xyz * r3.xyz;
	r5.xyz = point_lightpos1.xyz + -i.texcoord1.xyz;
	r1.x = dot(r5.xyz, r5.xyz);
	r1.x = 1 / sqrt(r1.x);
	r5.xyz = r5.xyz * r1.xxx + r0.yzw;
	r1.x = 1 / r1.x;
	r1.x = -r1.x + point_lightpos1.w;
	r1.x = r1.x * point_light1.w;
	r6.xyz = normalize(r5.xyz);
	r1.y = dot(r6.xyz, i.texcoord3.xyz);
	r2.w = -r1.y + 1;
	r1.z = r2.w * -specularParam.z + r1.y;
	r5 = tex2D(Spec_Pow_sampler, r1.zwzw);
	r1.yzw = r5.xyz * point_light1.xyz;
	r1.xyz = r1.xxx * r1.yzw;
	r1.xyz = r3.xyz * r1.xyz;
	r5 = g_specCalc1;
	r1.xyz = r1.xyz * r5.xxx;
	r1.xyz = r2.xyz * r0.xxx + r1.xyz;
	r2.xyz = point_lightpos2.xyz + -i.texcoord1.xyz;
	r1.w = dot(r2.xyz, r2.xyz);
	r1.w = 1 / sqrt(r1.w);
	r6.xyz = r2.xyz * r1.www + r0.yzw;
	r2.xyz = r1.www * r2.xyz;
	r1.w = 1 / r1.w;
	r1.w = -r1.w + point_lightpos2.w;
	r1.w = r1.w * point_light2.w;
	r2.x = dot(r2.xyz, i.texcoord3.xyz);
	r2.xyz = abs(r2.xxx) * point_light2.xyz;
	r2.xyz = r1.www * r2.xyz;
	r7.xyz = normalize(r6.xyz);
	r2.w = dot(r7.xyz, i.texcoord3.xyz);
	r3.w = -r2.w + 1;
	r6.x = r3.w * -specularParam.z + r2.w;
	r6.yw = specularParam.yy;
	r7 = tex2D(Spec_Pow_sampler, r6);
	r7.xyz = r7.xyz * point_light2.xyz;
	r7.xyz = r1.www * r7.xyz;
	r7.xyz = r3.xyz * r7.xyz;
	r1.xyz = r7.xyz * r5.yyy + r1.xyz;
	r7.xyz = point_lightposEv0.xyz + -i.texcoord1.xyz;
	r1.w = dot(r7.xyz, r7.xyz);
	r1.w = 1 / sqrt(r1.w);
	r8.xyz = r7.xyz * r1.www + r0.yzw;
	r7.xyz = r1.www * r7.xyz;
	r1.w = 1 / r1.w;
	r1.w = -r1.w + point_lightposEv0.w;
	r1.w = r1.w * point_lightEv0.w;
	r2.w = dot(r7.xyz, i.texcoord3.xyz);
	r7.xyz = normalize(r8.xyz);
	r3.w = dot(r7.xyz, i.texcoord3.xyz);
	r5.x = -r3.w + 1;
	r6.z = r5.x * -specularParam.z + r3.w;
	r6 = tex2D(Spec_Pow_sampler, r6.zwzw);
	r6.xyz = r6.xyz * point_lightEv0.xyz;
	r6.xyz = r1.www * r6.xyz;
	r6.xyz = r3.xyz * r6.xyz;
	r1.xyz = r6.xyz * r5.zzz + r1.xyz;
	r5.xyz = point_lightposEv1.xyz + -i.texcoord1.xyz;
	r3.w = dot(r5.xyz, r5.xyz);
	r3.w = 1 / sqrt(r3.w);
	r6.xyz = r5.xyz * r3.www + r0.yzw;
	r5.xyz = r3.www * r5.xyz;
	r3.w = 1 / r3.w;
	r3.w = -r3.w + point_lightposEv1.w;
	r3.w = r3.w * point_lightEv1.w;
	r5.x = dot(r5.xyz, i.texcoord3.xyz);
	r7.xyz = normalize(r6.xyz);
	r5.y = dot(r7.xyz, i.texcoord3.xyz);
	r5.z = -r5.y + 1;
	r6.x = r5.z * -specularParam.z + r5.y;
	r6.yw = specularParam.yy;
	r7 = tex2D(Spec_Pow_sampler, r6);
	r7.xyz = r7.xyz * point_lightEv1.xyz;
	r7.xyz = r3.www * r7.xyz;
	r7.xyz = r3.xyz * r7.xyz;
	r1.xyz = r7.xyz * r5.www + r1.xyz;
	r5.y = g_specCalc2.x;
	r7.xyz = point_lightposEv2.xyz + -i.texcoord1.xyz;
	r5.z = dot(r7.xyz, r7.xyz);
	r5.z = 1 / sqrt(r5.z);
	r0.yzw = r7.xyz * r5.zzz + r0.yzw;
	r7.xyz = r5.zzz * r7.xyz;
	r5.z = 1 / r5.z;
	r5.z = -r5.z + point_lightposEv2.w;
	r5.z = r5.z * point_lightEv2.w;
	r5.w = dot(r7.xyz, i.texcoord3.xyz);
	r7.xyz = normalize(r0.yzw);
	r0.y = dot(r7.xyz, i.texcoord3.xyz);
	r0.z = -r0.y + 1;
	r6.z = r0.z * -specularParam.z + r0.y;
	r6 = tex2D(Spec_Pow_sampler, r6.zwzw);
	r0.yzw = r6.xyz * point_lightEv2.xyz;
	r0.yzw = r5.zzz * r0.yzw;
	r0.yzw = r3.xyz * r0.yzw;
	r0.yzw = r0.yzw * r5.yyy + r1.xyz;
	r1.x = abs(specularParam.x);
	r0.yzw = r0.yzw * r1.xxx;
	r1.z = 1;
	r1.x = r1.z + -spot_param.x;
	r1.x = 1 / r1.x;
	r3.xyz = spot_angle.xyz + -i.texcoord1.xyz;
	r1.y = dot(r3.xyz, r3.xyz);
	r1.y = 1 / sqrt(r1.y);
	r3.xyz = r1.yyy * r3.xyz;
	r1.y = 1 / r1.y;
	r3.x = dot(r3.xyz, lightpos.xyz);
	r3.x = r3.x + -spot_param.x;
	r1.x = r1.x * r3.x;
	r5.y = max(r3.x, 0);
	r3.x = 1 / spot_param.y;
	r1.x = r1.x * r3.x;
	r3.x = frac(-r5.y);
	r3.x = r3.x + r5.y;
	r3.y = dot(lightpos.xyz, i.texcoord3.xyz);
	r3.x = r3.x * abs(r3.y);
	r1.x = r1.x * r3.x;
	r3.x = 1 / spot_angle.w;
	r1.y = r1.y * r3.x;
	r1.y = -r1.y + 1;
	r1.y = r1.y * 10;
	r1.x = r1.y * r1.x;
	r5.y = lerp(r1.x, abs(r3.y), spot_param.z);
	r3.xyz = r5.yyy * light_Color.xyz;
	r6.yzw = g_specCalc1.yzw;
	r6.xyz = -r6.yzw + 2;
	r2.xyz = r2.xyz * r6.xxx + i.texcoord2.xyz;
	r2.xyz = r3.xyz * r0.xxx + r2.xyz;
	r1.xy = -r4.yy + r4.xz;
	r0.x = max(abs(r1.x), abs(r1.y));
	r0.x = r0.x + -0.015625;
	r1.x = (-r0.x >= 0) ? 0 : 1;
	r0.x = (r0.x >= 0) ? -0 : -1;
	r0.x = r0.x + r1.x;
	r0.x = (r0.x >= 0) ? -r0.x : -0;
	r4.xz = (r0.xx >= 0) ? r4.yy : r4.xz;
	r0.x = r4.w * ambient_rate.w;
	r3.xyz = r4.xyz * point_lightEv0.xyz;
	r3.xyz = abs(r2.www) * r3.xyz;
	r1.xyw = r1.www * r3.xyz;
	r1.xyw = r6.yyy * r1.xyw;
	r1.xyw = r4.xyz * r2.xyz + r1.xyw;
	r2.xyz = r4.xyz * point_lightEv1.xyz;
	r2.xyz = abs(r5.xxx) * r2.xyz;
	r2.xyz = r3.www * r2.xyz;
	r1.xyw = r2.xyz * r6.zzz + r1.xyw;
	r2.xyz = r4.xyz * point_lightEv2.xyz;
	r2.xyz = abs(r5.www) * r2.xyz;
	r2.xyz = r5.zzz * r2.xyz;
	r3.x = 2;
	r2.w = r3.x + -g_specCalc2.x;
	r1.xyw = r2.xyz * r2.www + r1.xyw;
	r2.xyz = r4.xyz * ambient_rate.xyz;
	r1.xyw = r2.xyz * ambient_rate_rate.xyz + r1.xyw;
	r2 = tex2D(cubemap_sampler, i.texcoord4);
	r3 = tex2D(cubemap2_sampler, i.texcoord4);
	r5 = lerp(r3, r2, g_CubeBlendParam.x);
	r2 = r5 * ambient_rate_rate.w;
	r3.x = r2.w * CubeParam.y + CubeParam.x;
	r2.xyz = r2.xyz * r3.xxx;
	r3.xyz = r4.xyz * r2.xyz;
	r4.xyz = r4.xyz + specularParam.www;
	r5.xyz = r3.xyz * CubeParam.zzz + r1.xyw;
	r3.xyz = r3.xyz * CubeParam.zzz;
	r1.xyw = r1.xyw * -r3.xyz + r5.xyz;
	r1.xyw = r0.yzw * r4.xyz + r1.xyw;
	r0.yzw = r0.yzw * r4.xyz;
	r1.z = r1.z + -CubeParam.z;
	r1.xyz = r2.xyz * r1.zzz + r1.xyw;
	r2.xyz = fog.xyz;
	r1.xyz = r1.xyz * prefogcolor_enhance.xyz + -r2.xyz;
	o.xyz = i.texcoord1.www * r1.xyz + fog.xyz;
	r1.x = max(r0.y, r0.z);
	r2.x = max(r1.x, r0.w);
	r0.y = r2.x * specularParam.x;
	r0.z = max(CubeParam.x, CubeParam.y);
	r0.y = r2.w * r0.z + r0.y;
	r1.x = max(r0.y, r0.x);
	r0.x = r1.x * prefogcolor_enhance.w;
	o.w = r0.x;

	return o;
}
